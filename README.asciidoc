= Kakoune Language Server Protocol Client

kak-lsp is a https://microsoft.github.io/language-server-protocol/[Language Server Protocol] client for http://kakoune.org[Kakoune] implemented in https://www.rust-lang.org[Rust].

== Installation

=== Pre-built binaries

==== MacOS

===== Homebrew

----
brew install ul/kak-lsp/kak-lsp
----

===== Manual

----
curl -O -L https://github.com/ul/kak-lsp/releases/download/v3.7.0/kak-lsp-v3.7.0-x86_64-apple-darwin.tar.gz
tar xzvf kak-lsp-v3.7.0-x86_64-apple-darwin.tar.gz

# replace `~/.local/bin/` with something on your `$PATH`
mv kak-lsp ~/.local/bin/

mkdir -p ~/.config/kak-lsp 
mv kak-lsp.toml ~/.config/kak-lsp/ 
----

==== Linux

----
wget https://github.com/ul/kak-lsp/releases/download/v3.7.0/kak-lsp.x86_64-unknown-linux-musl.tar.gz
tar xzvf kak-lsp.x86_64-unknown-linux-musl.tar.gz

# replace `~/.local/bin/` with something on your `$PATH`
mv kak-lsp ~/.local/bin/

mkdir -p ~/.config/kak-lsp 
mv kak-lsp.toml ~/.config/kak-lsp/ 
----

==== FreeBSD

----
wget https://github.com/ul/kak-lsp/releases/download/v3.7.0/kak-lsp-v3.7.0-x86_64-unknown-freebsd.tar.gz
tar xzvf kak-lsp-v3.7.0-x86_64-unknown-freebsd.tar.gz

# replace `~/.local/bin/` with something on your `$PATH`
mv kak-lsp ~/.local/bin/

mkdir -p ~/.config/kak-lsp 
mv kak-lsp.toml ~/.config/kak-lsp/ 
----

=== From the source

NOTE: ArchLinux users can automate most of the following steps with the https://aur.archlinux.org/packages/kak-lsp-git/[kak-lsp-git] AUR package.

----
git clone https://github.com/ul/kak-lsp
cd kak-lsp

cargo build --release

# replace `~/.local/bin/` with something on your `$PATH`
ln -s $PWD/target/release/kak-lsp ~/.local/bin/

mkdir -p ~/.config/kak-lsp 
# or just link if you are okay with default config
cp kak-lsp.toml ~/.config/kak-lsp/
----

== Language servers

kak-lsp doesn't manage installation of language servers, please install them
by yourself for the languages you plan to use kak-lsp with. Please consult the
https://github.com/ul/kak-lsp/wiki/How-to-install-servers[How to install servers] wiki page for
quick installation of language servers supported by kak-lsp out of the box.

== Usage

To enable LSP support for configured languages (see the next section) just add following commands to
your `kakrc`:

----
%sh{kak-lsp --kakoune -s $kak_session}
lsp-start
----

It will add completions, hover info and will bind goto definition to `gd` (the latter is available
as `:lsp-definition` command, feel free to bind it to any convenient key/alias or call directly).
References for a symbol under the main cursor are available via `:lsp-references` which is not bound
to any key by default. Project-wide diagnostics are available via `:lsp-diagnostics` (current buffer
determines project and language to collect diagnostics). To enable inline diagnostics either set
`editor.inline_diagnostics` to true in `kak-lsp.toml` or add `lsp-inline-diagnostics-enable` after
`lsp-start` in your `kakrc`.

To know which subset of kak-lsp commands is backed by current buffer filetype's language server use
`:lsp-capabilities` command.

Expect kak-lsp to crash from time to time. Usually it's enough just to restart it (`:lsp-start`
command if you are using default integration). When you return to editing your files kak-lsp will
restart language server.

== Configuration

kak-lsp is configured via configuration file in https://github.com/toml-lang/toml[TOML] format. By default kak-lsp tries to read `$HOME/.config/kak-lsp/kak-lsp.toml`, but you can override it with command-line option `--config`.

Look into the default `kak-lsp.toml` in the root of repository, it should be quite self-descriptive.

If you are setting any options via cli do not forget to append them to `%sh{kak-lsp --kakoune ...}`
in your `kakrc`. It's not needed if you change options in `~/.config/kak-lsp/kak-lsp.toml` file.

Please let us know if you have any ideas about how to make default config more sensible.

== Troubleshooting

If kak-lsp fails try to replace `lsp-start` in your `kakrc` with 

----
nop %sh{ (kak-lsp -s $kak_session -vvv ) > /tmp/kak-lsp.log 2>&1 < /dev/null & }
----

to enable debug logging. If it will not give enough insights to fix the problem or if the problem is
a bug in kak-lsp itself please don't hesitate to raise an issue.

NOTE: Some Kakoune plugins could interfere with kak-lsp, particularly completions providers.
E.g. `racer.kak` competes for autocompletion in Rust files.

== Versioning

kak-lsp follows https://semver.org/[SemVer] with one notable difference from common practice: we
don't use 0 major version to indicate that product is not yet reached stability. Even for non-stable
and not feature-complete product user should be clearly informed about breaking change. Therefore we
start with major version 1 and increment it each time when upgrade requires user's attention.
